--[[ Helper String
--------------------------------
----------------------------- ]]

function split(inputstr, sep)
	if sep == nil then
		sep = "%s"
	end
	local t={}
	for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
		table.insert(t, str)
	end
	return t
end

--[[ Helper String Convert
--------------------------------
----------------------------- ]]

function decode_entity(str)
	entities = {'&#20;','&#21;','&#22;','&#23;','&#24;','&#25;','&#26;','&#27;','&#28;','&#29;',
	'&#2A;','&#2B;','&#2C;','&#2D;','&#2E;', '&#2F;','&#32;','&#33;','&#34;','&#35;',
	'&#36;','&#37;','&#38;','&#39;','&#40;',
	'&#41;','&#42;','&#43;','&#44;','&#45;','&#46;','&#47;','&#48;','&#49;','&#50;',
	'&#51;','&#52;','&#53;','&#54;','&#55;','&#56;','&#57;','&#58;','&#59;','&#60;',
	'&#61;','&#62;','&#63;','&#64;','&#65;','&#66;','&#67;','&#68;','&#69;','&#70;',
	'&#71;','&#72;','&#73;','&#74;','&#75;','&#76;','&#77;','&#78;','&#79;','&#80;',
	'&#81;','&#82;','&#83;','&#84;','&#85;','&#86;','&#87;','&#88;','&#89;','&#90;',
	'&#91;','&#92;','&#93;','&#94;','&#95;','&#96;','&#97;','&#98;','&#99;','&#100;',
	'&#101;','&#102;','&#103;','&#104;','&#105;','&#106;','&#107;','&#108;','&#109;',
	'&#110;','&#111;','&#112;','&#113;','&#114;','&#115;','&#116;','&#117;','&#118;',
	'&#119;','&#120;','&#121;','&#122;','&#123;','&#124;','&#125;','&#126;','&#127;',
	'&#128;','&#129;','&#130;','&#131;','&#132;','&#133;','&#134;','&#135;','&#136;',
	'&#137;','&#138;','&#139;','&#140;','&#141;','&#142;','&#143;','&#144;','&#145;',
	'&#146;','&#147;','&#148;','&#149;','&#150;','&#151;','&#152;','&#153;','&#154;',
	'&#155;','&#156;','&#157;','&#158;','&#159;','&#160;','&#161;','&#162;','&#163;',
	'&#164;','&#165;','&#166;','&#167;','&#168;','&#169;','&#170;','&#171;','&#172;',
	'&#173;','&#174;','&#175;','&#176;','&#177;','&#178;','&#179;','&#180;','&#181;',
	'&#182;','&#183;','&#184;','&#185;','&#186;','&#187;','&#188;','&#189;','&#190;',
	'&#191;','&#192;','&#193;','&#194;','&#195;','&#196;','&#197;','&#198;','&#199;',
	'&#200;','&#201;','&#202;','&#203;','&#204;','&#205;','&#206;','&#207;','&#208;',
	'&#209;','&#210;','&#211;','&#212;','&#213;','&#214;','&#215;','&#216;','&#217;',
	'&#218;','&#219;','&#220;','&#221;','&#222;','&#223;','&#224;','&#225;','&#226;',
	'&#227;','&#228;','&#229;','&#230;','&#231;','&#232;','&#233;','&#234;','&#235;',
	'&#236;','&#237;','&#238;','&#239;','&#240;','&#241;','&#242;','&#243;','&#244;',
	'&#245;','&#246;','&#247;','&#248;','&#249;','&#250;','&#251;','&#252;','&#253;',
	'&#254;','&#255;','&#338;','&#339;','&#352;','&#353;','&#376;','&#402;','&#8211;',
	'&#8212;','&#8216;','&#8217;','&#8218;','&#8220;','&#8221;','&#8222;','&#8224;',
	'&#8225;','&#8226;','&#8230;','&#8240;','&#8364;','&#8482'}

	for i, entity in ipairs(entities) do
		if string.match(str, entity) then
			num, _ = string.gsub(entity, "(&#)", '') 
			num, _ = string.gsub(num, "(;)", '') 
			str = string.gsub(str, entity, string.char(num))
		end
	end
	
	return str
end

function convert_latin(str)
	entities = {'À','Á','Â','Ã','Ä','Å','Ă','Ā','Ą','Æ','Ǽ','à','á','â','ã','ä','å','ă','ā','ą','æ','ǽ',
	'Þ','þ','ß','Ç','Č','Ć','Ĉ','Ċ','ç','č','ć','ĉ','ċ','Đ','Ď','Đ','đ','ď','È','É','Ê','Ë',
	'Ĕ','Ē','Ę','Ė','è','é','ê','ë','ĕ','ē','ę','ė','Ĝ','Ğ','Ġ','Ģ','ĝ','ğ','ġ','ģ','Ĥ','Ħ',
	'ĥ','ħ','Ì','Í','Î','Ï','İ','Ĩ','Ī','Ĭ','Į','ì','í','î','ï','į','ĩ','ī','ĭ','ı','Ĵ','ĵ',
	'Ķ','ķ','ĸ','Ĺ','Ļ','Ľ','Ŀ','Ł','ĺ','ļ','ľ','ŀ','ł','Ñ','Ń','Ň','Ņ','Ŋ','ñ','ń','ň','ņ',
	'ŋ','ŉ','Ò','Ó','Ô','Õ','Ö','Ø','Ō','Ŏ','Ő','Œ','ò','ó','ô','õ','ö','ø','ō','ŏ','ő','œ',
	'ð','Ŕ','Ř','ŕ','ř','ŗ','Š','Ŝ','Ś','Ş','š','ŝ','ś','ş','Ŧ','Ţ','Ť','ŧ','ţ','ť','Ù','Ú',
	'Û','Ü','Ũ','Ū','Ŭ','Ů','Ű','Ų','ù','ú','û','ü','ũ','ū','ŭ','ů','ű','ų','Ŵ','Ẁ','Ẃ','Ẅ',
	'ŵ','ẁ','ẃ','ẅ','Ý','Ÿ','Ŷ','ý','ÿ','ŷ','Ž','Ź','Ż','Ž','ž','ź','ż','ž','z'}

	latins = {["À"]='A',["Á"]='A',["Â"]='A',["Ã"]='A',["Ä"]='A',["Å"]='A',["Ă"]='A',["Ā"]='A',["Ą"]='A',["Æ"]='A',["Ǽ"]='A',
	["à"]='a',["á"]='a',["â"]='a',["ã"]='a',["ä"]='a',["å"]='a',["ă"]='a',["ā"]='a',["ą"]='a',["æ"]='a',["ǽ"]='a',
	["Þ"]='B',["þ"]='b',["ß"]='B',["Ç"]='C',["Č"]='C',["Ć"]='C',["Ĉ"]='C',["Ċ"]='C',["ç"]='c',["č"]='c',["ć"]='c',
	["ĉ"]='c',["ċ"]='c',["Đ"]='D',["Ď"]='D',["Đ"]='D',["đ"]='d',["ď"]='d',["È"]='E',["É"]='E',["Ê"]='E',["Ë"]='E',
	["Ĕ"]='E',["Ē"]='E',["Ę"]='E',["Ė"]='E',["è"]='e',["é"]='e',["ê"]='e',["ë"]='e',["ĕ"]='e',["ē"]='e',["ę"]='e',
	["ė"]='e',["Ĝ"]='G',["Ğ"]='G',["Ġ"]='G',["Ģ"]='G',["ĝ"]='g',["ğ"]='g',["ġ"]='g',["ģ"]='g',["Ĥ"]='H',["Ħ"]='H',
	["ĥ"]='h',["ħ"]='h',["Ì"]='I',["Í"]='I',["Î"]='I',["Ï"]='I',["İ"]='I',["Ĩ"]='I',["Ī"]='I',["Ĭ"]='I',["Į"]='I',
	["ì"]='i',["í"]='i',["î"]='i',["ï"]='i',["į"]='i',["ĩ"]='i',["ī"]='i',["ĭ"]='i',["ı"]='i',["Ĵ"]='J',["ĵ"]='j',
	["Ķ"]='K',["ķ"]='k',["ĸ"]='k',["Ĺ"]='L',["Ļ"]='L',["Ľ"]='L',["Ŀ"]='L',["Ł"]='L',["ĺ"]='l',["ļ"]='l',["ľ"]='l',
	["ŀ"]='l',["ł"]='l',["Ñ"]='N',["Ń"]='N',["Ň"]='N',["Ņ"]='N',["Ŋ"]='N',["ñ"]='n',["ń"]='n',["ň"]='n',["ņ"]='n',
	["ŋ"]='n',["ŉ"]='n',["Ò"]='O',["Ó"]='O',["Ô"]='O',["Õ"]='O',["Ö"]='O',["Ø"]='O',["Ō"]='O',["Ŏ"]='O',["Ő"]='O',
	["Œ"]='O',["ò"]='o',["ó"]='o',["ô"]='o',["õ"]='o',["ö"]='o',["ø"]='o',["ō"]='o',["ŏ"]='o',["ő"]='o',["œ"]='o',
	["ð"]='o',["Ŕ"]='R',["Ř"]='R',["ŕ"]='r',["ř"]='r',["ŗ"]='r',["Š"]='S',["Ŝ"]='S',["Ś"]='S',["Ş"]='S',["š"]='s',
	["ŝ"]='s',["ś"]='s',["ş"]='s',["Ŧ"]='T',["Ţ"]='T',["Ť"]='T',["ŧ"]='t',["ţ"]='t',["ť"]='t',["Ù"]='U',["Ú"]='U',
	["Û"]='U',["Ü"]='U',["Ũ"]='U',["Ū"]='U',["Ŭ"]='U',["Ů"]='U',["Ű"]='U',["Ų"]='U',["ù"]='u',["ú"]='u',["û"]='u',
	["ü"]='u',["ũ"]='u',["ū"]='u',["ŭ"]='u',["ů"]='u',["ű"]='u',["ų"]='u',["Ŵ"]='W',["Ẁ"]='W',["Ẃ"]='W',["Ẅ"]='W',
	["ŵ"]='w',["ẁ"]='w',["ẃ"]='w',["ẅ"]='w',["Ý"]='Y',["Ÿ"]='Y',["Ŷ"]='Y',["ý"]='y',["ÿ"]='y',["ŷ"]='y',["Ž"]='Z',
	["Ź"]='Z',["Ż"]='Z',["Ž"]='Z',["ž"]='z',["ź"]='z',["ż"]='z',["ž"]='z'}

	for i, entity in ipairs(entities) do
		if string.match(str, entity) then
			str = string.gsub(str, entity, latins)
		end
	end
	return str
end

---------------


local char_to_hex = function(c)
return string.format("%%%02X", string.byte(c))
end

function urlencode(url)
	if url == nil then
		return
	end
	url = url:gsub("\n", "\r\n")
	url = url:gsub("([^%w ])", char_to_hex)
	url = url:gsub(" ", "+")
	return url
end


--------------------

function cache206(s)
	local seg = re.replace(s, [[^.*Content\-Range:\sbytes\s0\-(\d+)/\d+\r\n.*]], '\\1')
	local seg = tonumber(seg) + 1
	local len = re.replace(s, [[^.*Content\-Range:\sbytes\s0\-\d+/(\d+)\r\n.*]], '\\1')
	local len = tonumber(len)
	if seg==len then
		return true
	else
		return false
	end
end

-- https://stackoverflow.com/questions/14554193/last-index-of-character-in-string/14573968
local function basename(path)
  return path:sub(path:find("/[^/]*$") + 1)
end

https://stackoverflow.com/questions/43295128/regexp-get-last-part-of-url-without-parameters-if-they-exists
lastparameter = re.replace(new_name, [[^.*\/([^?]+))]], '\\1')		